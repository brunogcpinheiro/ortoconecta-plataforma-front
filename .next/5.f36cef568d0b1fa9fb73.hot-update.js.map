{"version":3,"file":"5.f36cef568d0b1fa9fb73.hot-update.js","sources":["webpack:///pages/experiencia.js"],"sourcesContent":["import React, { Fragment, Component } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Iframe from 'react-iframe'\nimport Head from 'next/head'\nimport { withRouter } from 'next/router'\nimport Router from 'next/router'\nimport Main from '../layouts/main'\nimport AlertBox from '../src/components/alertbox'\nimport { FaRegThumbsUp, FaRegCommentAlt } from 'react-icons/fa'\n\nconst primaryColor = \"#ffd32a\"\n\nconst ExperienceWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: 50px auto;\n    padding: 16px;\n    \n    h2 {\n        font-size: 2.5rem;\n    }\n`\n\nconst Experience = styled.div`\n    margin: 35px auto;\n    width: 80%;\n    display: flex;\n    justify-content: center;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    padding: 20px;\n    -webkit-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    -moz-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    transition: 0.5s background;\n    \n    div:first-child {\n        flex: 2;\n        height: 100%;\n    }\n    \n    div:last-child {\n        flex: 1;\n        margin-left: 15px;\n        \n        h1 {\n            margin-bottom: 16px;\n            text-align: center;\n            font-size: 1.5rem;\n        }\n        \n        p {\n            text-align: justify;\n        }\n    }\n    \n    @media (max-width: 780px) {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n`\n\nconst CommentsWrapper = styled.div`\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 20px;\n`\n\nconst Comment = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    padding: 20px;\n    -webkit-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    -moz-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    transition: 0.5s background;\n    width: 120%;\n    height: 100%;\n    margin-top: 20px;\n    \n    div {\n        padding: 10px;\n        \n        h3 {\n            font-size: 1.3rem;\n            color: ${primaryColor};\n            margin-bottom: 5px;\n        }\n        \n        h4 {\n            color: #999;\n            font-size: 0.9rem;\n            margin-bottom: 5px;\n        }\n        \n        small {\n            font-style: italic;\n            font-size: 0.8rem;\n            margin-bottom: 5px;\n        }\n        \n        p {\n            margin-top: 20px;\n            font-size: 1.1rem;\n        }\n    }\n`\n\nconst NewComment = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    padding: 20px;\n    -webkit-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    -moz-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\n    \n    form {\n        display: flex;\n        flex-direction: column;\n        padding: 16px 0;\n        \n        input {\n            margin: 10px;\n            padding: 10px;\n        }\n        \n        textarea {\n            margin-top: 10px;\n            padding: 10px;\n        }\n    }\n`\n\nconst CommentBtn = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 1em;\n    margin-top: 16px;\n    font-weight: bold;\n    text-decoration: none;\n    font-size: 1.1em;\n    text-transform: uppercase;\n    background: ${primaryColor};\n    border: 2px solid ${primaryColor};\n    \n    &:visited, &:active, &:link {\n        color: inherit;\n    }\n`\n\nconst Reactions = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding: 10px;\n`\n\nclass Experiencia extends Component {\n    state = {\n        author: '',\n        author_email: '',\n        body: '',\n        alertBox: false\n    }\n    \n    handleSubmit = async e => {\n        e.preventDefault()\n        \n        const newComment = {\n            author: this.state.author,\n            author_email: this.state.author_email,\n            date: moment().format(),\n            body: this.state.body,\n            experience: Router.query.id \n        }\n        \n        if (this.state.author && this.state.author_email && this.state.body) {\n            await axios.post(`http://ortoconecta-plataforma-brunogcpinheiro.c9users.io:8080/comments`, newComment)\n            .then(res => console.log(res))\n            .catch(err => console.log(err))\n        } else {\n            this.setState({ alertBox: true })\n        }\n    }\n    \n    render () {\n        const sorted = this.props.experience.comments.sort((a,b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0)).reverse();\n        \n        return (\n            <Main>\n                <Head>\n                    <title>OrtoConecta | {this.props.experience.title}</title>\n                </Head>\n                <ExperienceWrapper>\n                    <Experience>\n                        <Fragment>\n                            <div>\n                                <Iframe url={`http://www.youtube.com/embed/${this.props.experience.video_url}`}\n                                    position=\"relative\"\n                                    width=\"100%\"\n                                    height=\"500px\"\n                                    display=\"initial\"\n                                    className=\"iframe\"\n                                    allowFullScreen />\n                            </div>\n                            <div>\n                                <h1>{this.props.experience.title}</h1>\n                                <p>{this.props.experience.description}</p>\n                                <Reactions>\n                                    <FaRegThumbsUp style={{ fontSize: '1.5rem', marginTop: '-4px', padding: '10px' }} /> (4)\n                                    <FaRegCommentAlt style={{ fontSize: '1.5rem', marginLeft: '10px', padding: '10px' }} /> ({this.props.experience.comments.length})\n                                </Reactions>\n                            </div>\n                        </Fragment>\n                    </Experience>\n                    <h2>Comentários</h2>\n                    <CommentsWrapper>\n                        <NewComment>\n                            <h3>Novo Comentário</h3>\n                            <form onSubmit={(e) => this.handleSubmit(e)}>\n                                <input type=\"text\" placeholder=\"Nome...\" onChange={(e) => this.setState({ author: e.target.value })} value={this.state.author} />\n                                <input type=\"email\" placeholder=\"Email...\" onChange={(e) => this.setState({ author_email: e.target.value })} value={this.state.author_email} />\n                                <textarea rows=\"5\" placeholder=\"Comentário...\" onChange={(e) => this.setState({ body: e.target.value })} value={this.state.body}></textarea>\n                                <CommentBtn type=\"submit\">Comentar</CommentBtn>\n                                {this.state.alertBox === true && <AlertBox errorMessage=\"Por favor, preencha todos dos campos!\" />}\n                            </form>\n                        </NewComment>\n                        {sorted.map(comment => (\n                            <Comment key={comment.id}>\n                                <div>\n                                    <h3>{comment.author}</h3>\n                                    <h4>{comment.author_email}</h4>\n                                    <small>{\n                                        moment.locale('pt-br'),\n                                        moment(comment.date).format(\"LLL\")\n                                    }</small>\n                                      <p>{comment.body}</p>\n                                </div>\n                            </Comment>\n                        ))}\n                    </CommentsWrapper>\n                </ExperienceWrapper>\n            </Main>\n        )   \n    }\n}\n\nExperiencia.getInitialProps = async ({ query }) => {\n    const experienceResponse = await axios.get(`http://ortoconecta-plataforma-brunogcpinheiro.c9users.io:8080/experiences/${query.id}`)\n    \n    return { experience: experienceResponse.data }\n}\n\nexport default withRouter(Experiencia)\n\n\n// WEBPACK FOOTER //\n// pages/experiencia.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAwCA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AA2CA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAaA;AAAA;AACA;AAAA;AACA;AAfA;AAAA;AAAA;AACA;AADA;AAgBA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;AAmiBA;;;;;;;;;;;AAvFA;AACA;AAyFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AADA;;;;;;;;;;;;AAhQA;AAEA;AAaA;AAwCA;AASA;AA2CA;AA4BA;AAkBA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}