{"version":3,"file":"static/webpack/static\\development\\pages\\dicas.js.9f75441520273e2f4976.hot-update.js","sources":["webpack:///./pages/dicas.js"],"sourcesContent":["import React, { Fragment, Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Head from 'next/head'\r\nimport Router from 'next/router'\r\nimport axios from 'axios'\r\nimport Iframe from 'react-iframe'\r\nimport swal from 'sweetalert2'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\nimport 'dayjs/locale/pt-br'\r\ndayjs.extend(relativeTime)\r\nimport Main from '../layouts/main'\r\n\r\nconst primaryColor = \"#FFD32A\"\r\n\r\nconst TipsWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url('/static/Imagem3.png');\r\n    background-attachment: fixed;\r\n    background-position: top center;\r\n    background-size: 100px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    margin-top: 7px;\r\n`\r\n\r\nconst Title = styled.div`\r\n    width: 50%;\r\n    background: transparent;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    h1 {\r\n        width: fit-content;\r\n        text-align: center;\r\n        font-size: 3rem;\r\n        background: #f5f5f5;\r\n    }\r\n    \r\n    p {\r\n        border: 3px solid ${primaryColor};\r\n        text-align: center;\r\n        padding: 16px;\r\n        font-size: 1.5rem;\r\n        color: royalblue;\r\n        background: #f5f5f5;\r\n    }   \r\n`\r\n\r\nconst TipContainer = styled.div`\r\n    width: 90%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    @media(max-width: 960px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst TipWrapper = styled.div`\r\n    width: 30%;\r\n    height: 400px;\r\n    margin: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-itens: center;\r\n    justify-content: space-around;\r\n    background: #f5f5f5;\r\n    -webkit-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    -moz-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    transform: scale(1);\r\n        transition: transform 0.5s;\r\n    \r\n    &:hover {\r\n        transform: scale(1.1);\r\n        transition: transform 0.5s;\r\n    }\r\n    \r\n    h2 {\r\n        text-align: center;\r\n        font-size: 1.5rem;\r\n    }\r\n`\r\n\r\nconst VideoWrapper = styled.div`\r\n    width: 100%;\r\n    height: 300px;\r\n`\r\n\r\nconst CommentsWrapper = styled.div`\r\n    width: 50%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: #f5f5f5;\r\n`\r\n\r\nconst Comment = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    margin: 15px;\r\n    background: #f5f5f5;\r\n    -webkit-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    -moz-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    transition: 0.5s background;\r\n    width: 120%;\r\n    height: 100%;\r\n    margin-top: 20px;\r\n    \r\n    div {\r\n        padding: 10px;\r\n        \r\n        h3 {\r\n            font-size: 1.3rem;\r\n            color: ${primaryColor};\r\n            margin-bottom: 5px;\r\n        }\r\n        \r\n        h4 {\r\n            color: #999;\r\n            font-size: 0.9rem;\r\n            margin-bottom: 5px;\r\n        }\r\n        \r\n        small {\r\n            font-style: italic;\r\n            font-size: 0.8rem;\r\n            margin-bottom: 5px;\r\n        }\r\n        \r\n        p {\r\n            margin-top: 20px;\r\n            font-size: 1.1rem;\r\n        }\r\n    }\r\n`\r\n\r\nconst NewComment = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    background: #f5f5f5;\r\n    -webkit-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    -moz-box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    box-shadow: 0px 3px 5px 0px rgba(184,184,184,1);\r\n    \r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding: 16px 0;\r\n        \r\n        input {\r\n            margin: 10px;\r\n            padding: 10px;\r\n        }\r\n        \r\n        textarea {\r\n            margin-top: 10px;\r\n            padding: 10px;\r\n        }\r\n    }\r\n`\r\n\r\nconst CommentBtn = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1em;\r\n    margin-top: 16px;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    font-size: 1.1em;\r\n    text-transform: uppercase;\r\n    background: ${primaryColor};\r\n    border: 2px solid ${primaryColor};\r\n    \r\n    &:visited, &:active, &:link {\r\n        color: inherit;\r\n    }\r\n`\r\n\r\nclass Dicas extends Component {\r\n    state = {\r\n        author: '',\r\n        author_email: '',\r\n        body: '',\r\n    }\r\n    \r\n    handleSubmit = async e => {\r\n        e.preventDefault()\r\n        \r\n        const newComment = {\r\n            author: this.state.author,\r\n            author_email: this.state.author_email,\r\n            date: dayjs().format(),\r\n            body: this.state.body,\r\n        }\r\n        \r\n        if (this.state.author && this.state.author_email && this.state.body) {\r\n            await axios.post(`http://ortoconecta-plataforma-brunogcpinheiro.c9users.io:8080/tipsComments`, newComment)\r\n            .then(this.setState({\r\n                author: '',\r\n                author_email: '',\r\n                body: ''\r\n            })).then(\r\n                swal({\r\n                  type: 'success',\r\n                  title: 'Comentário adicionado com sucesso!'\r\n                })\r\n            )\r\n            .catch(() => {\r\n                swal({\r\n                  type: 'error',\r\n                  title: 'Algo errado com a requisição. Tente novamente!'\r\n                })\r\n            })\r\n            Router.replace(`http://www.ortoconecta.com.br/dicas`)\r\n        } else {\r\n            swal({\r\n              type: 'error',\r\n              title: 'Preencha todos os dados!'\r\n            })\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        const sorted = this.props.comments.sort((a,b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0)).reverse();   \r\n    \r\n        return (\r\n            <Fragment>\r\n                <Head>\r\n                    <title>OrtoConecta | Dicas clínicas</title>\r\n                </Head>\r\n                <Main>\r\n                    <TipsWrapper>\r\n                            <Title>\r\n                                <h1>Dicas OrtoConecta</h1>\r\n                                <p>Uma área destinada à prática e conceitos modernos para você utilizar no dia a dia do seu consultório. Todo conhecimento agregado gera valor e faz com que você transmita a segurança necessária para cativar o seu paciente. <br />Navegue neste espaço e deixe seu comentário.</p>\r\n                            </Title>\r\n                            <TipContainer className=\"animated bounceIn delay-1s\">\r\n                                {this.props.tips.map(tip => (\r\n                                    <TipWrapper key={tip.id}>\r\n                                        <VideoWrapper>\r\n                                              <Iframe url={`https://www.youtube.com/embed/${tip.video_url}`} \r\n                                                position=\"relative\"\r\n                                                width=\"100%\"\r\n                                                height=\"100%\"\r\n                                                display=\"initial\"\r\n                                                className=\"iframe\"\r\n                                                allowFullScreen\r\n                                              />\r\n                                        </VideoWrapper>\r\n                                        <h2>{tip.title}</h2>\r\n                                    </TipWrapper>  \r\n                                ))}\r\n                            </TipContainer>\r\n                            \r\n                            <CommentsWrapper>\r\n                            <NewComment>\r\n                                <h3>Novo Comentário</h3>\r\n                                <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                                    <input type=\"text\" placeholder=\"Nome...\" onChange={(e) => this.setState({ author: e.target.value })} value={this.state.author}   />\r\n                                    <input type=\"email\" placeholder=\"Email...\" onChange={(e) => this.setState({ author_email: e.target.value })} value={this.state.author_email}   />\r\n                                    <textarea rows=\"5\" placeholder=\"Comentário...\" onChange={(e) => this.setState({ body: e.target.value })} value={this.state.body}></textarea>\r\n                                    <CommentBtn type=\"submit\">Comentar</CommentBtn>\r\n                                </form>\r\n                            </NewComment>\r\n                            {sorted.map(comment => (\r\n                                <Comment key={comment.id}>\r\n                                    <div>\r\n                                        <h3>{comment.author}</h3>\r\n                                        <h4>{comment.author_email}</h4>\r\n                                        <small>{\r\n                                            dayjs.locale('pt-br'),\r\n                                            dayjs(comment.date).fromNow()\r\n                                        }</small>\r\n                                          <p>{comment.body}</p>\r\n                                    </div>\r\n                                </Comment>\r\n                            ))}\r\n                        </CommentsWrapper>\r\n                    </TipsWrapper>\r\n                </Main>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nDicas.getInitialProps = async() => {\r\n    const tipsResponse = await axios.get(`http://api.ortoconecta.com.br/tips`)\r\n    const commentsResponse = await axios.get(`http://api.ortoconecta.com.br/tipsComments`)\r\n    \r\n    return { tips: tipsResponse.data, comments: commentsResponse.data }\r\n}\r\n\r\nexport default Dicas"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;;;;;;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAaA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AA5BA;AA4BA;AA5BA;AAAA;AACA;AADA;AA8BA;AACA;AACA;AAFA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAoCA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAWA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAoBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AADA;AAkBA;;;;AAxGA;AACA;AA0GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}